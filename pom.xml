<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>baoying</groupId>
  <artifactId>LibEvaluation</artifactId>
  <version>${revision}</version>
  <name>LibEvaluation</name>

  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>
  <!-- packaging:pom 创建项目后，manual添加-->
  <packaging>pom</packaging>

  <properties>
    <revision>1.0-SNAPSHOT</revision>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <!-- https://stackoverflow.com/questions/4725668/how-to-deploy-snapshot-with-sources-and-javadoc -->
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>install</phase>
              <goals><goal>jar-no-fork</goal></goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.2.0</version>
          <!--
          不得不manual加上这个，因为maven javadoc plugin暂时不那么智能，无法识别设定的JAVA_HOME
          https://stackoverflow.com/questions/13961615/unable-to-find-javadoc-command-maven
          -->
          <configuration>
            <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <phase>install</phase>
              <goals><goal>jar</goal></goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <modules>
    <module>eval-grpc-allinone</module>
    <module>eval-grpc-server</module>
    <module>eval-grpc-client</module>
    <module>eval-grpc-proto</module>
    <module>eval-perf</module>
    <module>eval-JDK</module>
    <module>eval-vertx</module>
    <module>eval-netty</module>
    <module>eval-qfj</module>
    <module>eval-common</module>
    <module>eval-spring</module>
  </modules>
  <!-- manual 添加 - 上传到远端nexus/maven仓库 - 执行mvn deploy时候-->
  <distributionManagement>
    <repository>
      <id>nexus-releases</id>
      <url>http://localhost:8081/repository/maven-releases/</url>
    </repository>
    <snapshotRepository>
      <id>nexus-snapshots</id>
      <url>http://localhost:8081/repository/maven-snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
</project>
